package main

import (
	"fmt"

	"github.com/Djoulzy/godsk"
)

var diskbyte [0x40]byte = [0x40]byte{0x96, 0x97, 0x9A, 0x9B, 0x9D, 0x9E, 0x9F, 0xA6, 0xA7, 0xAB, 0xAC, 0xAD, 0xAE, 0xAF, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6, 0xB7, 0xB9, 0xBA, 0xBB, 0xBC, 0xBD, 0xBE, 0xBF, 0xCB, 0xCD, 0xCE, 0xCF, 0xD3, 0xD6, 0xD7, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF, 0xE5, 0xE6, 0xE7, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF}

func main() {
	disk, err := godsk.InitContainer("Dos33.dsk")
	if err != nil {
		panic(err)
	}
	disk.Dump(true)

	var decal int
	var rest, buf2index, eorBuf1, tmp, eorBuf2 byte
	var src, buf1, buf2 []byte

	src = disk.TRKS[0][0:256] //[]byte{0x01, 0xA5, 0x27, 0xC9, 0x09, 0xD0, 0x18, 0xA5, 0x2B, 0x4A, 0x4A, 0x4A, 0x4A, 0x09, 0xC0, 0x85}

	buf1 = make([]byte, len(src))
	buf2 = make([]byte, len(src))

	decal = 4
	buf2index = 0
	eorBuf1 = 0x00
	eorBuf2 = 0x00
	for index, data := range src {
		buf1[index] = eorBuf1 ^ (data >> 2)
		eorBuf1 = data >> 2

		rest = data & 0b00000011
		rest <<= decal
		buf2[buf2index] |= rest
		decal -= 2

		if decal < 0 {
			tmp = buf2[buf2index]
			buf2[buf2index] = eorBuf2 ^ tmp
			eorBuf2 = tmp
			decal = 4
			buf2index++
		}
	}

	for index, data := range src {
		fmt.Printf("%08b -> %08b (%02X) - %08b (%02X)\n", data, buf1[index], diskbyte[buf1[index]], buf2[index], diskbyte[buf2[index]])
	}
}
